plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // (1) asciidoctor 파일 컨버팅, builder 복사 플러그인
}

group = 'com.ebsoft'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    asciidoctorExt // (2) asciidoctorExt를 configurations로 지정
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //시큐리티 설치
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //p6spy 설치 (3.x는 1.9.0버전 사용해야함)
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    // docs 설치
    // (3) adocs 파일에서 사용할 snippets 속성이 자동으로 build/generated-snippets를 가리키도록 해줌
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //시큐리티 설치
    testImplementation 'org.springframework.security:spring-security-test'
    //테스트용 h2 DB 설치
    testImplementation 'com.h2database:h2'
    // 단위 테스트 mockMvc 설치 (4)
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    snippetsDir = file('build/generated-snippets') // (5) snippets 파일 저장 경로 설정
}

test {
    outputs.dir snippetsDir // (6) 출력할 디렉토리 설정 (5)에서 지정한 경로
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExt' // (7) asciidoctor에서 asciidoctorExt을 configurations로 사용(2)
    baseDirFollowsSourceFile() // (8) .adoc 파일에서 다른.adoc 파일을 include하여 사용할 때 경로를 동일하게 baseDir로 설정
    inputs.dir snippetsDir // (9) input 디렉토리를 설정 (5)에서 지정한 경로
    dependsOn test // (10)  build시 test 후 asciidoctor 실행 (계속해서 create -> boot jar 로 이어짐)
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')  // (11)  중복을 막기 위해 이전에 생성한 문서들 삭제
}

// (12) build/docs/asciidoc 에 생성된 html 문서를 src/main/resources/static/docs 에 복사해온다.
task createDocument(type: Copy) {
    dependsOn asciidoctor // asciidoctor 후 실행

    from file("build/docs/asciidoc")
    into file("src/main/resources/static")
}

bootJar { // (13) jar의 static/docs에 문서 복사
    dependsOn createDocument // createDocument 후 실행 

    from("${asciidoctor.outputDir}") { // Html 파일이 생긴 asciidoctor.outputDir 로 복사
        into 'static/docs'
    }
}

build { // (14) createDocument 후 build 실행 지정
    dependsOn createDocument
}

//rest docs
// .adoc를 사용하게 하고, test build를 할 때, '자동으로 build/generated-snippets' 경로에 restdocs에 사용될
// snipptes 조각들을 저장.
// dependsOn으로 다음에 필요한 작업을 자동 및 올바른 실행순서로 진행해주며,
// 'docs/asciidocs/'에 있는 adoc을 자동으로 html로 저장.
